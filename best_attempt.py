from numpy import Infinity
from rayoptics.elem.surface import Circular

isdark = False
# use standard rayoptics environment
from rayoptics.environment import *


def material_ab(x):
    k = (1.67 - x) / 0.13
    return 75.0 * (1.67 - x) / 0.13 + 39.0 * (1. - (1.67 - x) / 0.13)

X = [-4.834651346772097e-06, 0.2705553170036994, 0.9744054341615305, 1.5864169549908196, 289.7634523560122, 0.12785735145076327, 0.4924335505623125, -0.050182236082467205, 1.048975166769958, 1.758860256452685, 170.13785810339343, -0.2681024080291225, 2.105402350892953, 0.8799997202257365, 1.121023293659819, 1.0158170558944564, 1.0009149706723448, -4.2352630401005415e-05, 0.8590606239867382, 1.588337287219771, 12.566823546171243, 3.260979820618158e-05, 1.2984966097491233, 0.9649810706741518, -4.274205330867402e-05, 0.19331820399530303, -4.5766061598555746e-05, 1.2224213730101399e-05, 3.494427811471917e-05, 0.742768417560636, 0.9496542346421872]
Y = [5.398073758030672e-07, 0.009219328556807705, -0.034390750257299235, 0.0179678002326516, -0.005400784826173183, 5.219985558399806e-07, 5.49942186004187e-07, 5.557182604460021e-07]
Y1 = [4.7454862180175056e-07, -0.0026231211989352528, -0.03597082782067838, 0.0038449577196623466, -0.00015408135668568457, 5.186851712333864e-07, 4.860927124386317e-07, 5.356050352010661e-07]
Y2 = [5.200200050096662e-07, -0.024811239818842173, 0.012684738790004924, -0.01902684597596802, 0.004191678052126818, 5.726392578330398e-07, 5.038041059755232e-07, 5.289281572717493e-07]
Y3 = [5.431354347412456e-07, 5.39878972765864e-07, 5.43307213000029e-07, 5.352224198841643e-07, 5.112436490208031e-07, 5.657975243437506e-07, 5.409989289734275e-07, 5.143197782721606e-07]
Y4 = [5.077809969562653e-07, 5.461193566505501e-07, 4.988582137307644e-07, 4.956423814801007e-07, 5.795171561929526e-07, 5.117886846062148e-07, 5.238266870158524e-07, 5.260932791660195e-07]
Y5 = [5.44680204452678e-07, 5.174080340601714e-07, 4.7282562207451686e-07, 5.354661632302327e-07, 5.45717658678328e-07, 5.457007871271218e-07, 5.67331373514998e-07, 5.298735905774776e-07]
Y6 = [7.075417657744777e-07, 6.482963208062986e-07, 7.295437136387512e-07, 6.42325986331851e-07, 7.369212849573478e-07, 6.638228783557085e-07, 7.605151272857209e-07, 6.827036868750377e-07]
Y7 = [6.737774951075506e-07, 7.184968514703455e-07, 6.064854655435702e-07, 6.360075163361204e-07, 6.685400906756551e-07, 6.985949640894904e-07, 6.831661109502255e-07, 6.012991663834138e-07]


opm = OpticalModel()
sm = opm['seq_model']
osp = opm['optical_spec']
pm = opm['parax_model']
em = opm['ele_model']
pt = opm['part_tree']
opm.system_spec.dimensions = 'mm'
osp['pupil'] = PupilSpec(osp, key=['object', 'pupil'], value=2.35)
osp['fov'] = FieldSpec(osp, key=['object', 'angle'],  value=0.05, is_relative=True, flds=[0., 5., 10., 15., 20.])
osp['wvls'] = WvlSpec([(490, 1.), (580, 1.)], ref_wl=1)
osp.defocus = FocusRange(focus_shift=0.)

opm.radius_mode = False

sm.gaps[0].thi = 1e10
sm.add_surface([1. / X[1], X[2], 1.54, material_ab(1.54)])

sm.ifcs[sm.cur_surface].profile = EvenPolynomial(r=1. / X[1], ec=X[13],
                                                 coefs=[1.398073758030672e-04, 0.007919328556807705, -0.035390750257299235, 0.0189678002326516, -0.005500784826173183, 5.219985558399806e-05, 5.49942186004187e-07, 5.557182604460021e-07])

# воздух
sm.add_surface([1. / X[5], X[6]])
sm.ifcs[sm.cur_surface].profile = EvenPolynomial(r=1. / X[5], ec=X[14],
                                                 coefs=[Y1[0], Y1[1], Y1[2], Y1[3], Y1[4], Y1[5], Y1[6], Y1[7]])

sm.add_surface([1. / (X[7]), X[8], 1.67, material_ab(1.67)])
sm.ifcs[sm.cur_surface].profile = EvenPolynomial(r=1. / (X[7]), ec=X[15],
                                                 coefs=[Y2[0], Y2[1], Y2[2], Y2[3], Y2[4], Y2[5], Y2[6], Y2[7]])

sm.add_surface([1. / (X[11]), X[12]])
sm.ifcs[sm.cur_surface].profile = EvenPolynomial(r=1. / (X[11]), ec=X[16],
                                                 coefs=[Y3[0], Y3[1], Y3[2], Y3[3], Y3[4], Y3[5], Y3[6], Y3[7]])

ap2 = Circular(0.51,x_offset=0.3)
sm.ifcs[2].clear_apertures = [ap2]

sm.add_surface([-1. / (X[17]), 0.8582010294386863, 1.55, material_ab(1.55)])
sm.ifcs[sm.cur_surface].profile = EvenPolynomial(r=-1. / (X[17]), ec=1.,
                                                 coefs=[Y4[0], Y4[1], Y4[2], Y4[3], Y4[4], Y4[5], Y4[6], Y4[7]])

sm.add_surface([-1. / (X[21]), 0.511712129719171])
sm.ifcs[sm.cur_surface].profile = EvenPolynomial(r=-1. / (X[21]), ec=X[23],
                                                 coefs=[Y5[0], Y5[1], Y5[2], Y5[3], Y5[4], Y5[5], Y5[6], Y5[7]])


sm.add_surface([-1. / (-4.2352630401005415e-03), 0.21, 1.64, material_ab(1.64)])
sm.ifcs[sm.cur_surface].profile = EvenPolynomial(r=-1. / (-4.2352630401005415e-03), ec=1.229133607129681e-05,
                                                 coefs=[7.075417657744777e-07, 6.482963208062986e-07, 7.295437136387512e-07, 6.42325986331851e-07, 7.369212849573478e-07, 6.638228783557085e-07, 7.605151272857209e-07, 6.827036868750377e-07])

sm.add_surface([-1. / (19.370979820618158e-03), 0.719])
sm.ifcs[sm.cur_surface].profile = EvenPolynomial(r=-1. / (19.370979820618158e-03), ec=0.1,
                                                 coefs=[9.737774951075506e-04, 8.184968514703455e-04, 10.064854655435702e-04, 0.160075163361204e-04, -4.685400906756551e-05, 1.985949640894904e-07, 6.831661109502255e-07, 6.012991663834138e-07])



ap3 = Circular(1.5,x_offset=1.43)
sm.ifcs[3].clear_apertures = [ap3]

ap4 = Circular(0.12,x_offset=0.)
sm.ifcs[4].clear_apertures = [ap4]



#воздух второй параметр - расстояние до экрана
#sm.add_surface([Infinity, 4.216392884493065])
#sm.ifcs[sm.cur_surface].profile = EvenPolynomial(r=Infinity, ec=1.,
#                        coefs=[0., 0., 0., 0., 0., 0., 0., 0., 0.])

opm.update_model()
layout_plt0 = plt.figure(FigureClass=InteractiveLayout, opt_model=opm,
                        do_draw_rays=True, do_paraxial_layout=False,
                        is_dark=isdark).plot()

sm.do_apertures = True
sm.stop_surface=1
sm.cur_surface=9


sm.list_model()


plt.show()

opm.save_model("ideal.roa")

